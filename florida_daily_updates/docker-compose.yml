# Florida Daily Updates - Docker Compose Configuration
# Production-ready deployment with all necessary services

version: '3.8'

services:
  # Main Florida Updates Service
  florida-updates:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-}
        VERSION: ${VERSION:-1.0.0}
        VCS_REF: ${VCS_REF:-}
    image: florida-daily-updates:${VERSION:-1.0.0}
    container_name: florida-updates
    restart: unless-stopped
    
    environment:
      # Application settings
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
      # Supabase configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SUPABASE_DB_URL=${SUPABASE_DB_URL}
      
      # Notification settings
      - EMAIL_USERNAME=${EMAIL_USERNAME:-}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      
      # Security
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-}
      
      # Timezone
      - TZ=${TZ:-America/New_York}
    
    volumes:
      # Persistent data storage
      - florida-data:/app/florida_daily_updates/data
      - florida-logs:/app/florida_daily_updates/logs
      
      # Configuration overrides (optional)
      - ./config/production.yaml:/app/florida_daily_updates/config/config.production.yaml:ro
      
      # Host timezone
      - /etc/localtime:/etc/localtime:ro
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["/app/healthcheck.sh"]
      interval: 30m
      timeout: 10s
      start_period: 5m
      retries: 3
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        labels: "florida-updates"
    
    # Network
    networks:
      - florida-network
    
    # Labels for monitoring
    labels:
      - "com.concordbroker.service=florida-updates"
      - "com.concordbroker.version=${VERSION:-1.0.0}"
      - "com.concordbroker.environment=${ENVIRONMENT:-production}"

  # Optional: Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: florida-redis
    restart: unless-stopped
    
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    volumes:
      - florida-redis-data:/data
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'
    
    # Health check
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 3
    
    networks:
      - florida-network
    
    labels:
      - "com.concordbroker.service=redis"

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: florida-prometheus
    restart: unless-stopped
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - florida-prometheus-data:/prometheus
    
    ports:
      - "9090:9090"
    
    networks:
      - florida-network
    
    labels:
      - "com.concordbroker.service=prometheus"
    
    profiles:
      - monitoring

  # Optional: Log aggregation with Grafana Loki
  loki:
    image: grafana/loki:2.9.0
    container_name: florida-loki
    restart: unless-stopped
    
    command: -config.file=/etc/loki/local-config.yaml
    
    volumes:
      - ./monitoring/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - florida-loki-data:/loki
    
    ports:
      - "3100:3100"
    
    networks:
      - florida-network
    
    labels:
      - "com.concordbroker.service=loki"
    
    profiles:
      - monitoring

  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:10.1.0
    container_name: florida-grafana
    restart: unless-stopped
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    
    volumes:
      - florida-grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    
    ports:
      - "3000:3000"
    
    networks:
      - florida-network
    
    labels:
      - "com.concordbroker.service=grafana"
    
    profiles:
      - monitoring

# Persistent volumes
volumes:
  florida-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}
  
  florida-logs:
    driver: local
    driver_opts:
      type: none  
      o: bind
      device: ${LOGS_PATH:-./logs}
  
  florida-redis-data:
    driver: local
  
  florida-prometheus-data:
    driver: local
  
  florida-loki-data:
    driver: local
  
  florida-grafana-data:
    driver: local

# Network configuration
networks:
  florida-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16