// Property Filter Mapping Service
// Generated by Filter Validation Agent

export const PropertyTypeMappings = {
  // UI display values to database codes
  Residential: {
    dorCodes: ['001', '002', '003', '004', '005', '006', '007', '008', '009'],
    dorRange: { min: 1, max: 9 },
    label: 'Residential',
    icon: 'Home',
    color: 'green',
    subtypes: {
      'Single Family': ['001', '002', '003'],
      'Condo': ['004', '005'],
      'Mobile Home': ['006', '007'],
      'Multi-family': ['008', '009']
    }
  },
  Commercial: {
    dorCodes: ['010', '011', '012', '013', '014', '015', '016', '017', '018', '019', '020', '021', '022', '023', '024', '025', '026', '027', '028', '029', '030', '031', '032', '033', '034', '035', '036', '037', '038', '039'],
    dorRange: { min: 10, max: 39 },
    label: 'Commercial',
    icon: 'Building',
    color: 'blue',
    subtypes: {
      'Retail': ['011', '012', '013'],
      'Office': ['017', '018'],
      'Hotel/Motel': ['019', '039'],
      'Mixed Use': ['010', '015', '016']
    }
  },
  Industrial: {
    dorCodes: ['040', '041', '042', '043', '044', '045', '046', '047', '048', '049'],
    dorRange: { min: 40, max: 49 },
    label: 'Industrial',
    icon: 'Factory',
    color: 'purple',
    subtypes: {
      'Light Manufacturing': ['041', '042'],
      'Heavy Manufacturing': ['043', '044'],
      'Warehouse': ['048', '049']
    }
  },
  Agricultural: {
    dorCodes: ['050', '051', '052', '053', '054', '055', '056', '057', '058', '059', '060', '061', '062', '063', '064', '065', '066', '067', '068', '069'],
    dorRange: { min: 50, max: 69 },
    label: 'Agricultural',
    icon: 'Wheat',
    color: 'green',
    subtypes: {
      'Cropland': ['051', '052', '053'],
      'Grazing': ['054', '055', '056'],
      'Orchard/Grove': ['057', '058']
    }
  },
  Vacant: {
    dorCodes: ['000', '090', '091', '092', '093', '094', '095'],
    dorRange: { min: 90, max: 95 },
    label: 'Vacant Land',
    icon: 'Map',
    color: 'gray',
    subtypes: {}
  },
  Institutional: {
    dorCodes: ['070', '071', '072', '073', '074', '075', '076', '077', '078', '079', '080', '081', '082', '083', '084', '085', '086', '087', '088', '089'],
    dorRange: { min: 70, max: 89 },
    label: 'Institutional',
    icon: 'Building2',
    color: 'teal',
    subtypes: {
      'Schools': ['071', '072', '073'],
      'Churches': ['077', '078'],
      'Hospitals': ['074', '075', '076'],
      'Government': ['080', '081', '082', '083', '084', '085', '086']
    }
  }
};

export function mapPropertyTypeToQuery(uiValue: string): string | null {
  const mapping = PropertyTypeMappings[uiValue];
  if (!mapping) return null;
  
  // Create query for Supabase
  if (mapping.dorRange) {
    return `dor_cd.gte.${mapping.dorRange.min}&dor_cd.lte.${mapping.dorRange.max}`;
  }
  
  return null;
}

export function getDorCodePropertyType(dorCode: string | number): string {
  const code = typeof dorCode === 'string' ? parseInt(dorCode) : dorCode;
  
  if (code >= 1 && code <= 9) return 'Residential';
  if (code >= 10 && code <= 39) return 'Commercial';
  if (code >= 40 && code <= 49) return 'Industrial';
  if (code >= 50 && code <= 69) return 'Agricultural';
  if (code >= 70 && code <= 89) return 'Institutional';
  if (code >= 90 && code <= 95) return 'Vacant';
  if (code === 0) return 'Vacant';
  
  return 'Other';
}

export function buildFilterQuery(filters: any) {
  const queryParts: string[] = [];
  
  // Property Type Filter
  if (filters.propertyType && filters.propertyType !== 'All Properties') {
    const mapping = PropertyTypeMappings[filters.propertyType];
    if (mapping && mapping.dorRange) {
      queryParts.push(`dor_cd.gte.${mapping.dorRange.min}`);
      queryParts.push(`dor_cd.lte.${mapping.dorRange.max}`);
    }
  }
  
  // City Filter
  if (filters.city) {
    queryParts.push(`phy_city.ilike.%${filters.city}%`);
  }
  
  // Price Range
  if (filters.minPrice) {
    queryParts.push(`jv.gte.${filters.minPrice}`);
  }
  if (filters.maxPrice) {
    queryParts.push(`jv.lte.${filters.maxPrice}`);
  }
  
  // Advanced Filters
  if (filters.bedrooms) {
    queryParts.push(`beds_val.gte.${filters.bedrooms}`);
  }
  if (filters.bathrooms) {
    queryParts.push(`baths_val.gte.${filters.bathrooms}`);
  }
  if (filters.squareFootage) {
    queryParts.push(`tot_lvg_area.gte.${filters.squareFootage}`);
  }
  if (filters.yearBuilt) {
    queryParts.push(`act_yr_blt.gte.${filters.yearBuilt}`);
  }
  
  // Boolean filters
  if (filters.hasPool) {
    queryParts.push(`pool.eq.Y`);
  }
  if (filters.waterfront) {
    queryParts.push(`water_front_cd.neq.`);
  }
  if (filters.foreclosure) {
    queryParts.push(`has_foreclosure.eq.true`);
  }
  if (filters.taxDeed) {
    queryParts.push(`has_tax_deed.eq.true`);
  }
  if (filters.taxLien) {
    queryParts.push(`has_tax_lien.eq.true`);
  }
  
  return queryParts.join('&');
}
